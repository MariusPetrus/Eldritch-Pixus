function Map.new 0
push constant 7
call Memory.alloc 1
pop pointer 0
push constant 128
call Array.new 1
pop this 0
push constant 0
pop this 1
push constant 64
call Array.new 1
pop this 2
push constant 0
pop this 3
push constant 64
call Array.new 1
pop this 4
push pointer 0
return
function Map.customMap 4
push argument 0
pop pointer 0
push constant 11
pop this 5
push constant 0
pop this 6
push constant 11
push constant 15
call Vector.new 2
pop local 0
push this 5
push this 6
call Vector.new 2
pop local 1
push local 0
push local 1
call Draw.mapAccessPoints 2
pop temp 0
push local 0
call Vector.dispose 1
pop temp 0
push local 1
call Vector.dispose 1
pop temp 0
push constant 11
push constant 14
call Vector.new 2
pop local 2
push local 2
return
function Map.movementTutorial 4
push argument 0
pop pointer 0
push constant 11
pop this 5
push constant 0
pop this 6
push constant 11
push constant 15
call Vector.new 2
pop local 0
push this 5
push this 6
call Vector.new 2
pop local 1
push local 0
push local 1
call Draw.mapAccessPoints 2
pop temp 0
push local 0
call Vector.dispose 1
pop temp 0
push local 1
call Vector.dispose 1
pop temp 0
push pointer 0
push constant 6
push constant 1
call Vector.new 2
push constant 6
push constant 14
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 16
push constant 1
call Vector.new 2
push constant 16
push constant 14
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push constant 11
push constant 14
call Vector.new 2
pop local 2
push local 2
return
function Map.itemsTutorial 4
push argument 0
pop pointer 0
push constant 11
pop this 5
push constant 0
pop this 6
push constant 11
push constant 15
call Vector.new 2
pop local 0
push this 5
push this 6
call Vector.new 2
pop local 1
push local 0
push local 1
call Draw.mapAccessPoints 2
pop temp 0
push local 0
call Vector.dispose 1
pop temp 0
push local 1
call Vector.dispose 1
pop temp 0
push pointer 0
push constant 1
push constant 14
call Vector.new 2
call Map.placePotion 2
pop temp 0
push pointer 0
push constant 1
push constant 13
call Vector.new 2
call Map.placePotion 2
pop temp 0
push pointer 0
push constant 1
push constant 12
call Vector.new 2
call Map.placePotion 2
pop temp 0
push pointer 0
push constant 1
push constant 11
call Vector.new 2
call Map.placePotion 2
pop temp 0
push pointer 0
push constant 1
push constant 10
call Vector.new 2
call Map.placePotion 2
pop temp 0
push pointer 0
push constant 1
push constant 9
call Vector.new 2
call Map.placeKey 2
pop temp 0
push pointer 0
push constant 1
push constant 8
call Vector.new 2
call Map.placeKey 2
pop temp 0
push pointer 0
push constant 1
push constant 7
call Vector.new 2
call Map.placeKey 2
pop temp 0
push pointer 0
push constant 1
push constant 6
call Vector.new 2
call Map.placeKey 2
pop temp 0
push pointer 0
push constant 1
push constant 5
call Vector.new 2
call Map.placeKey 2
pop temp 0
push pointer 0
push constant 1
push constant 4
call Vector.new 2
call Map.placePowder 2
pop temp 0
push pointer 0
push constant 1
push constant 3
call Vector.new 2
call Map.placePowder 2
pop temp 0
push pointer 0
push constant 1
push constant 2
call Vector.new 2
call Map.placePowder 2
pop temp 0
push pointer 0
push constant 1
push constant 1
call Vector.new 2
call Map.placePowder 2
pop temp 0
push pointer 0
push constant 22
push constant 14
call Vector.new 2
call Map.placeSpider 2
pop temp 0
push pointer 0
push constant 22
push constant 13
call Vector.new 2
call Map.placeSpider 2
pop temp 0
push pointer 0
push constant 22
push constant 12
call Vector.new 2
call Map.placeSpider 2
pop temp 0
push pointer 0
push constant 22
push constant 11
call Vector.new 2
call Map.placeSpider 2
pop temp 0
push pointer 0
push constant 22
push constant 10
call Vector.new 2
call Map.placeSpider 2
pop temp 0
push pointer 0
push constant 22
push constant 9
call Vector.new 2
call Map.placeDoor 2
pop temp 0
push pointer 0
push constant 22
push constant 8
call Vector.new 2
call Map.placeDoor 2
pop temp 0
push pointer 0
push constant 22
push constant 7
call Vector.new 2
call Map.placeDoor 2
pop temp 0
push pointer 0
push constant 22
push constant 6
call Vector.new 2
call Map.placeDoor 2
pop temp 0
push pointer 0
push constant 22
push constant 5
call Vector.new 2
call Map.placeDoor 2
pop temp 0
push pointer 0
push constant 22
push constant 4
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 22
push constant 3
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 22
push constant 2
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 22
push constant 1
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push constant 11
push constant 14
call Vector.new 2
pop local 2
push local 2
return
function Map.level1 4
push argument 0
pop pointer 0
push constant 13
pop this 5
push constant 0
pop this 6
push constant 13
push constant 15
call Vector.new 2
pop local 0
push this 5
push this 6
call Vector.new 2
pop local 1
push local 0
push local 1
call Draw.mapAccessPoints 2
pop temp 0
push local 0
call Vector.dispose 1
pop temp 0
push local 1
call Vector.dispose 1
pop temp 0
push pointer 0
push constant 6
push constant 1
call Vector.new 2
push constant 6
push constant 14
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 16
push constant 1
call Vector.new 2
push constant 16
push constant 14
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 11
push constant 2
call Vector.new 2
push constant 11
push constant 4
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 11
push constant 6
call Vector.new 2
push constant 11
push constant 8
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 11
push constant 10
call Vector.new 2
push constant 11
push constant 12
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 12
push constant 3
call Vector.new 2
push constant 12
push constant 3
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 14
push constant 3
call Vector.new 2
push constant 15
push constant 3
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 12
push constant 7
call Vector.new 2
push constant 12
push constant 7
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 14
push constant 7
call Vector.new 2
push constant 15
push constant 7
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 12
push constant 11
call Vector.new 2
push constant 12
push constant 11
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 14
push constant 11
call Vector.new 2
push constant 15
push constant 11
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 7
push constant 2
call Vector.new 2
push constant 10
push constant 2
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 7
push constant 6
call Vector.new 2
push constant 10
push constant 6
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 7
push constant 10
call Vector.new 2
push constant 10
push constant 10
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 7
push constant 11
call Vector.new 2
call Map.placeKey 2
pop temp 0
push pointer 0
push constant 7
push constant 7
call Vector.new 2
call Map.placePotion 2
pop temp 0
push pointer 0
push constant 7
push constant 3
call Vector.new 2
call Map.placePowder 2
pop temp 0
push pointer 0
push constant 13
push constant 11
call Vector.new 2
call Map.placeDoor 2
pop temp 0
push pointer 0
push constant 13
push constant 7
call Vector.new 2
call Map.placeSpider 2
pop temp 0
push pointer 0
push constant 13
push constant 3
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push constant 11
push constant 14
call Vector.new 2
pop local 2
push local 2
return
function Map.level2 4
push argument 0
pop pointer 0
push constant 2
pop this 5
push constant 0
pop this 6
push constant 11
push constant 15
call Vector.new 2
pop local 0
push this 5
push this 6
call Vector.new 2
pop local 1
push local 0
push local 1
call Draw.mapAccessPoints 2
pop temp 0
push local 0
call Vector.dispose 1
pop temp 0
push local 1
call Vector.dispose 1
pop temp 0
push pointer 0
push constant 8
push constant 8
call Vector.new 2
push constant 8
push constant 12
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 8
push constant 14
call Vector.new 2
push constant 8
push constant 14
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 14
push constant 8
call Vector.new 2
push constant 14
push constant 14
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 9
push constant 8
call Vector.new 2
push constant 10
push constant 8
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 12
push constant 8
call Vector.new 2
push constant 13
push constant 8
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 2
push constant 11
call Vector.new 2
push constant 8
push constant 11
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 2
push constant 12
call Vector.new 2
push constant 2
push constant 14
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 5
push constant 14
call Vector.new 2
push constant 5
push constant 14
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 5
push constant 12
call Vector.new 2
push constant 5
push constant 12
call Vector.new 2
call Map.placeWoodenWall 3
pop temp 0
push pointer 0
push constant 1
push constant 3
call Vector.new 2
push constant 13
push constant 3
call Vector.new 2
call Map.placeStoneWall 3
pop temp 0
push pointer 0
push constant 13
push constant 3
call Vector.new 2
push constant 13
push constant 6
call Vector.new 2
call Map.placeStoneWall 3
pop temp 0
push pointer 0
push constant 13
push constant 6
call Vector.new 2
push constant 18
push constant 6
call Vector.new 2
call Map.placeStoneWall 3
pop temp 0
push pointer 0
push constant 20
push constant 6
call Vector.new 2
push constant 22
push constant 6
call Vector.new 2
call Map.placeStoneWall 3
pop temp 0
push pointer 0
push constant 5
push constant 13
call Vector.new 2
call Map.placeDoor 2
pop temp 0
push pointer 0
push constant 11
push constant 8
call Vector.new 2
call Map.placeSpider 2
pop temp 0
push pointer 0
push constant 13
push constant 7
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 1
push constant 11
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 19
push constant 6
call Vector.new 2
call Map.placeDoor 2
pop temp 0
push pointer 0
push constant 18
push constant 4
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 19
push constant 4
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 20
push constant 4
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 18
push constant 5
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 19
push constant 5
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 20
push constant 5
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 18
push constant 7
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 19
push constant 7
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 20
push constant 7
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 18
push constant 8
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 19
push constant 8
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 20
push constant 8
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 21
push constant 9
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 22
push constant 9
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 17
push constant 5
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 21
push constant 5
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 17
push constant 7
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 21
push constant 7
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 3
push constant 12
call Vector.new 2
call Map.placeKey 2
pop temp 0
push pointer 0
push constant 3
push constant 13
call Vector.new 2
call Map.placePotion 2
pop temp 0
push pointer 0
push constant 3
push constant 14
call Vector.new 2
call Map.placePowder 2
pop temp 0
push pointer 0
push constant 1
push constant 12
call Vector.new 2
call Map.placePowder 2
pop temp 0
push pointer 0
push constant 1
push constant 13
call Vector.new 2
call Map.placePowder 2
pop temp 0
push pointer 0
push constant 1
push constant 14
call Vector.new 2
call Map.placePowder 2
pop temp 0
push pointer 0
push constant 22
push constant 7
call Vector.new 2
call Map.placePowder 2
pop temp 0
push pointer 0
push constant 21
push constant 8
call Vector.new 2
call Map.placePowder 2
pop temp 0
push pointer 0
push constant 22
push constant 8
call Vector.new 2
call Map.placePowder 2
pop temp 0
push constant 11
push constant 14
call Vector.new 2
pop local 2
push local 2
return
function Map.win 4
push argument 0
pop pointer 0
push constant 11
pop this 5
push constant 0
pop this 6
push constant 11
push constant 15
call Vector.new 2
pop local 0
push this 5
push this 6
call Vector.new 2
pop local 1
push local 0
push local 1
call Draw.mapAccessPoints 2
pop temp 0
push local 0
call Vector.dispose 1
pop temp 0
push local 1
call Vector.dispose 1
pop temp 0
push pointer 0
push constant 2
push constant 2
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 2
push constant 3
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 3
push constant 4
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 3
push constant 5
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 4
push constant 2
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 4
push constant 3
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 6
push constant 2
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 6
push constant 3
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 6
push constant 4
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 6
push constant 5
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 7
push constant 2
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 7
push constant 5
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 8
push constant 2
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 8
push constant 3
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 8
push constant 4
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 8
push constant 5
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 10
push constant 2
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 10
push constant 3
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 10
push constant 4
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 10
push constant 5
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 11
push constant 5
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 12
push constant 2
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 12
push constant 3
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 12
push constant 4
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 12
push constant 5
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 10
push constant 7
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 10
push constant 8
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 10
push constant 9
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 9
push constant 10
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 11
push constant 10
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 8
push constant 7
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 8
push constant 8
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 8
push constant 9
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 12
push constant 7
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 12
push constant 8
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 12
push constant 9
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 14
push constant 7
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 14
push constant 8
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 14
push constant 9
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 14
push constant 10
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 15
push constant 7
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 15
push constant 10
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 16
push constant 7
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 16
push constant 8
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 16
push constant 9
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 16
push constant 10
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 18
push constant 7
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 18
push constant 8
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 18
push constant 9
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 18
push constant 10
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 19
push constant 8
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 20
push constant 9
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 21
push constant 7
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 21
push constant 8
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 21
push constant 9
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push pointer 0
push constant 21
push constant 10
call Vector.new 2
call Map.placeShrub 2
pop temp 0
push constant 11
push constant 14
call Vector.new 2
pop local 2
push local 2
return
function Map.placeStoneWall 2
push argument 0
pop pointer 0
push argument 1
push argument 2
call Draw.stoneWall 2
pop temp 0
push argument 1
call Vector.getX 1
push argument 2
call Vector.getX 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
call Vector.getY 1
pop local 0
push argument 2
call Vector.getY 1
push constant 1
add
pop local 1
label WHILE_EXP0
push local 0
push local 1
lt
not
if-goto WHILE_END0
push pointer 0
push argument 1
call Vector.getX 1
push local 0
call Vector.new 2
call Map.addObstacle 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE0
push argument 1
call Vector.getY 1
push argument 2
call Vector.getY 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
call Vector.getX 1
pop local 0
push argument 2
call Vector.getX 1
push constant 1
add
pop local 1
label WHILE_EXP1
push local 0
push local 1
lt
not
if-goto WHILE_END1
push pointer 0
push local 0
push argument 1
call Vector.getY 1
call Vector.new 2
call Map.addObstacle 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
label IF_FALSE1
push constant 0
return
function Map.placeWoodenWall 2
push argument 0
pop pointer 0
push argument 1
call Vector.getX 1
push argument 2
call Vector.getX 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
call Vector.getY 1
pop local 0
push argument 2
call Vector.getY 1
push constant 1
add
pop local 1
label WHILE_EXP0
push local 0
push local 1
lt
not
if-goto WHILE_END0
push argument 1
call Vector.getX 1
push local 0
call Vector.new 2
call Draw.plank 1
pop temp 0
push pointer 0
push argument 1
call Vector.getX 1
push local 0
call Vector.new 2
call Map.addObstacle 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE0
push argument 1
call Vector.getY 1
push argument 2
call Vector.getY 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
call Vector.getX 1
pop local 0
push argument 2
call Vector.getX 1
push constant 1
add
pop local 1
label WHILE_EXP1
push local 0
push local 1
lt
not
if-goto WHILE_END1
push local 0
push argument 1
call Vector.getY 1
call Vector.new 2
call Draw.plank 1
pop temp 0
push pointer 0
push local 0
push argument 1
call Vector.getY 1
call Vector.new 2
call Map.addObstacle 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
label IF_FALSE1
push constant 0
return
function Map.placeSpider 0
push argument 0
pop pointer 0
push argument 1
call Draw.spider 1
pop temp 0
push pointer 0
push argument 1
call Map.addObstacle 2
pop temp 0
push pointer 0
push argument 1
push constant 0
call Map.addSpecialTile 3
pop temp 0
push constant 0
return
function Map.placeDoor 0
push argument 0
pop pointer 0
push argument 1
call Draw.simpleDoor 1
pop temp 0
push pointer 0
push argument 1
call Map.addObstacle 2
pop temp 0
push pointer 0
push argument 1
push constant 1
call Map.addSpecialTile 3
pop temp 0
push constant 0
return
function Map.placeShrub 0
push argument 0
pop pointer 0
push argument 1
call Draw.shrub 1
pop temp 0
push pointer 0
push argument 1
call Map.addObstacle 2
pop temp 0
push pointer 0
push argument 1
push constant 2
call Map.addSpecialTile 3
pop temp 0
push constant 0
return
function Map.placePotion 0
push argument 0
pop pointer 0
push argument 1
call Draw.potion 1
pop temp 0
push pointer 0
push argument 1
call Map.addObstacle 2
pop temp 0
push pointer 0
push argument 1
push constant 3
call Map.addSpecialTile 3
pop temp 0
push constant 0
return
function Map.placeKey 0
push argument 0
pop pointer 0
push argument 1
call Draw.key 1
pop temp 0
push pointer 0
push argument 1
call Map.addObstacle 2
pop temp 0
push pointer 0
push argument 1
push constant 4
call Map.addSpecialTile 3
pop temp 0
push constant 0
return
function Map.placePowder 0
push argument 0
pop pointer 0
push argument 1
call Draw.powder 1
pop temp 0
push pointer 0
push argument 1
call Map.addObstacle 2
pop temp 0
push pointer 0
push argument 1
push constant 5
call Map.addSpecialTile 3
pop temp 0
push constant 0
return
function Map.obstacle 6
push argument 0
pop pointer 0
push argument 1
call Vector.getX 1
pop local 1
push argument 1
call Vector.getY 1
pop local 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 5
push local 5
call Vector.getX 1
pop local 3
push local 5
call Vector.getY 1
pop local 4
push local 3
push local 1
eq
push local 4
push local 2
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Map.addObstacle 0
push argument 0
pop pointer 0
push this 1
push this 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
add
pop this 1
push constant 0
return
function Map.removeObstacle 6
push argument 0
pop pointer 0
push argument 1
call Vector.getX 1
pop local 1
push argument 1
call Vector.getY 1
pop local 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 5
push local 5
call Vector.getX 1
pop local 3
push local 5
call Vector.getY 1
pop local 4
push local 3
push local 1
eq
push local 4
push local 2
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 0
add
push constant 1
neg
push constant 1
neg
call Vector.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Map.addSpecialTile 0
push argument 0
pop pointer 0
push this 3
push this 2
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 3
push this 4
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 3
push constant 1
add
pop this 3
push constant 0
return
function Map.removeSpecialTile 6
push argument 0
pop pointer 0
push argument 1
call Vector.getX 1
pop local 1
push argument 1
call Vector.getY 1
pop local 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 3
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 5
push local 5
call Vector.getX 1
pop local 3
push local 5
call Vector.getY 1
pop local 4
push local 3
push local 1
eq
push local 4
push local 2
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 2
add
push constant 1
neg
push constant 1
neg
call Vector.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
push argument 1
call Map.removeObstacle 2
pop temp 0
push argument 1
call Draw.erase 1
pop temp 0
push constant 0
return
function Map.isSpider 6
push argument 0
pop pointer 0
push argument 1
call Vector.getX 1
pop local 2
push argument 1
call Vector.getY 1
pop local 3
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 3
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 1
push local 1
call Vector.getX 1
pop local 4
push local 1
call Vector.getY 1
pop local 5
push local 2
push local 4
eq
push local 3
push local 5
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 4
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Map.isDoor 6
push argument 0
pop pointer 0
push argument 1
call Vector.getX 1
pop local 2
push argument 1
call Vector.getY 1
pop local 3
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 3
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 1
push local 1
call Vector.getX 1
pop local 4
push local 1
call Vector.getY 1
pop local 5
push local 2
push local 4
eq
push local 3
push local 5
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 4
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Map.isShrub 6
push argument 0
pop pointer 0
push argument 1
call Vector.getX 1
pop local 2
push argument 1
call Vector.getY 1
pop local 3
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 3
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 1
push local 1
call Vector.getX 1
pop local 4
push local 1
call Vector.getY 1
pop local 5
push local 2
push local 4
eq
push local 3
push local 5
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 4
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Map.isPotion 6
push argument 0
pop pointer 0
push argument 1
call Vector.getX 1
pop local 2
push argument 1
call Vector.getY 1
pop local 3
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 3
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 1
push local 1
call Vector.getX 1
pop local 4
push local 1
call Vector.getY 1
pop local 5
push local 2
push local 4
eq
push local 3
push local 5
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 4
add
pop pointer 1
push that 0
push constant 3
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Map.isKey 6
push argument 0
pop pointer 0
push argument 1
call Vector.getX 1
pop local 2
push argument 1
call Vector.getY 1
pop local 3
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 3
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 1
push local 1
call Vector.getX 1
pop local 4
push local 1
call Vector.getY 1
pop local 5
push local 2
push local 4
eq
push local 3
push local 5
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 4
add
pop pointer 1
push that 0
push constant 4
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Map.isPowder 6
push argument 0
pop pointer 0
push argument 1
call Vector.getX 1
pop local 2
push argument 1
call Vector.getY 1
pop local 3
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 3
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 1
push local 1
call Vector.getX 1
pop local 4
push local 1
call Vector.getY 1
pop local 5
push local 2
push local 4
eq
push local 3
push local 5
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 4
add
pop pointer 1
push that 0
push constant 5
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Map.isExit 2
push argument 0
pop pointer 0
push argument 1
call Vector.getX 1
pop local 0
push argument 1
call Vector.getY 1
pop local 1
push local 0
push this 5
eq
push local 1
push this 6
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Map.dispose 0
push argument 0
pop pointer 0
push this 0
call Array.dispose 1
pop temp 0
push this 2
call Array.dispose 1
pop temp 0
push this 4
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
