function Inventory.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 21
call Array.new 1
pop this 0
push constant 0
pop this 1
push constant 0
push this 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1000
pop this 2
push pointer 0
return
function Inventory.refresh 0
push argument 0
pop pointer 0
push this 2
push constant 1
add
pop this 2
push this 2
push constant 1000
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Inventory.clearInventory 1
pop temp 0
push pointer 0
call Inventory.fillInventory 1
pop temp 0
push constant 0
pop this 2
label IF_FALSE0
push constant 0
return
function Inventory.addItem 0
push argument 0
pop pointer 0
push this 1
push constant 21
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
add
push this 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
add
pop this 1
label IF_FALSE1
push argument 1
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 1
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
add
push this 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
add
pop this 1
label IF_FALSE2
push argument 1
push constant 2
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 1
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
add
push this 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
add
pop this 1
label IF_FALSE3
push constant 0
return
function Inventory.removeItem 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 21
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 1
push argument 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push this 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push local 0
call Inventory.cascadeItems 2
pop temp 0
push this 1
push constant 1
sub
pop this 1
push constant 0
return
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Inventory.cascadeItems 2
push argument 0
pop pointer 0
push argument 1
pop local 0
label WHILE_EXP0
push local 0
push constant 20
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 0
push this 0
add
push local 0
push constant 1
add
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
push this 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Inventory.contains 3
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 1
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 2
push local 2
push argument 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Inventory.clearInventory 3
push argument 0
pop pointer 0
push constant 25
pop local 1
push constant 1
pop local 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 21
lt
not
if-goto WHILE_END0
push local 1
push constant 30
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 25
pop local 1
push local 2
push constant 2
add
pop local 2
label IF_FALSE0
push local 1
push constant 512
push local 2
call Math.multiply 2
add
call Gfx.inventorySlot 1
pop temp 0
push local 1
push constant 2
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Inventory.fillInventory 3
push argument 0
pop pointer 0
push constant 25
pop local 1
push constant 1
pop local 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 1
push constant 30
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 25
pop local 1
push local 2
push constant 2
add
pop local 2
label IF_FALSE0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push constant 512
push local 2
call Math.multiply 2
add
call Gfx.itemPotion 1
pop temp 0
label IF_FALSE1
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push constant 512
push local 2
call Math.multiply 2
add
call Gfx.itemKey 1
pop temp 0
label IF_FALSE2
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push constant 512
push local 2
call Math.multiply 2
add
call Gfx.itemIgniPowder 1
pop temp 0
label IF_FALSE3
push local 1
push constant 2
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Inventory.isNotFull 0
push argument 0
pop pointer 0
push this 1
push constant 21
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Inventory.dispose 0
push argument 0
pop pointer 0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
